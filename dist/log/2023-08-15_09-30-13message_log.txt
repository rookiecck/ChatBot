[{'role': 'system', 'content': '请给我提供对于这段代码中功能的测试用例，包含输入和预期的输出结果，要求语句覆盖率分支覆盖率和MC/DC覆盖率达到100%,去除重复的测试用例'}, {'role': 'user', 'content': 'struct range {int range_start; int range_len;};\ntypedef int value;\ntypedef enum {no, yes} result;\nresult is_value_in_range (struct range r1, value v1)\n{\nif (v1 < r1.range_start)\nreturn no;\nif (v1 > (r1.range_start + r1.range_len))\nreturn no;\nreturn yes;\n}'}, {'role': 'user', 'content': '以表格形式返回'}, {'role': 'assistant', 'content': '| 输入                    | 预期输出    |\n|-------------------------|------------|\n| range_start = 0, range_len = 10, v1 = 5   | yes        |\n| range_start = 0, range_len = 10, v1 = 15  | no         |\n| range_start = 5, range_len = 10, v1 = 5   | yes        |\n| range_start = 5, range_len = 10, v1 = 15  | yes        |\n| range_start = -10, range_len = 20, v1 = 0 | yes        |\n| range_start = -10, range_len = 20, v1 = -15 | no         |\n| range_start = -10, range_len = 20, v1 = 10 | yes        |\n| range_start = -10, range_len = 20, v1 = 30 | no         |'}, {'role': 'user', 'content': '重新生成测试用例'}, {'role': 'assistant', 'content': '| 输入                    | 预期输出    |\n|-------------------------|------------|\n| range_start = 0, range_len = 10, v1 = 5   | yes        |\n| range_start = 0, range_len = 10, v1 = 15  | no         |\n| range_start = 5, range_len = 10, v1 = 5   | yes        |\n| range_start = 5, range_len = 10, v1 = 15  | no         |\n| range_start = -10, range_len = 20, v1 = 0 | yes        |\n| range_start = -10, range_len = 20, v1 = -15 | no         |\n| range_start = -10, range_len = 20, v1 = 10 | yes        |\n| range_start = -10, range_len = 20, v1 = 30 | no         |\n| range_start = 5, range_len = 0, v1 = 5    | no         |\n| range_start = 5, range_len = -10, v1 = 5  | no         |\n| range_start = 5, range_len = 10, v1 = 5   | yes        |\n| range_start = 5, range_len = 10, v1 = 15  | no         |'}]
{'role': 'user', 'content': '重新生成测试用例'}
{'role': 'assistant', 'content': '| 输入                    | 预期输出    |\n|-------------------------|------------|\n| range_start = 0, range_len = 10, v1 = 5   | yes        |\n| range_start = 0, range_len = 10, v1 = 15  | no         |\n| range_start = 5, range_len = 10, v1 = 5   | yes        |\n| range_start = 5, range_len = 10, v1 = 15  | no         |\n| range_start = -10, range_len = 20, v1 = 0 | yes        |\n| range_start = -10, range_len = 20, v1 = -15 | no         |\n| range_start = -10, range_len = 20, v1 = 10 | yes        |\n| range_start = -10, range_len = 20, v1 = 30 | no         |\n| range_start = 5, range_len = 0, v1 = 5    | no         |\n| range_start = 5, range_len = -10, v1 = 5  | no         |\n| range_start = 5, range_len = 10, v1 = 5   | yes        |\n| range_start = 5, range_len = 10, v1 = 15  | no         |'}